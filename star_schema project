create table dimDate(
	date_key integer not null primary key,
	date date not null,
	year smallint not null,
	quarter smallint not null,
	month smallint not null,
	day smallint not null,
	week smallint not null,
	is_weekend boolean
);

create table dimcustomer(
customer_key serial primary key,
	customer_id smallint not null,
	first_name varchar(50) not null,
	last_name varchar(50) not null,
	email varchar(50),
	address varchar(50) not null,
	address2 varchar(50),
	district varchar(50) not null,
	city varchar(50) not null,
	country varchar(50) not null,
	postal_code varchar(50),
	phone varchar(50) not null,
	active smallint not null,
	create_date timestamp not null,
	start_date date not null,
	end_date date not null
);

create table dimmovie(
movie_key serial primary key,
	film_id smallint not null,
	title varchar(250) not null,
	description text,
	release_year year,
	language varchar(40) not null,
	original_language varchar(40),
	rental_duration smallint not null,
	length smallint not null,
	rating varchar(5) not null,
	special_feature varchar(50) not null
);

ALTER TABLE dimmovie 
    ALTER COLUMN special_feature TYPE VARCHAR(100)


create table dimstore(
	store_key serial primary key,
	store_id smallint not null,
	address varchar(50) not null,
	address2 varchar(50),
	district varchar(50) not null,
	city varchar(50) not null,
	country varchar(50) not null,
	postal_code varchar(10),
	manager_first_name varchar(50) not null,
	manager_last_name varchar(50) not null,
	satrt_date date not null,
	end_date date not null
);

ALTER TABLE dimstore
RENAME COLUMN satrt_date TO start_date;


insert into dimdate(date_key, date, year, quarter, month, day, week, is_weekend)
select
	distinct(to_char(payment_date::date,'yyMMDD')::integer) as date_key,
	date(payment_date) as date,
	extract (year from payment_date) as year,
	extract (quarter from payment_date) as quarter,
	extract (month from payment_date) as month,
	extract (day from payment_date) as day,
	extract (week from payment_date) as week,
	case
	when extract(isodow from payment_date) in (6,7) then true else false
	end
from payment;

insert into dimcustomer(customer_key, customer_id, first_name, last_name, email, address, address2,
					   district, city, country, postal_code, phone, active, create_date,start_date, end_date)
select c.customer_id as customer_key,
c.customer_id,
c.first_name,
c.last_name,
c.email,
a.address,
a.address2,
a.district,
ci.city,
co.country,
a.postal_code,
a.phone,
c.active,
c.create_date,
now() as start_date,
now() as end_date
from customer c
join address a on a.address_id = c.address_id
join city ci on ci.city_id = a.city_id
join country co on co.country_id = ci.country_id

insert into dimmovie(movie_key, film_id, title, description, release_year, language, original_language, rental_duration,
					length, rating, special_feature)
select f.film_id as movie_key, f.film_id, f.title, f.description, f.release_year, l.name, l.name, f.rental_duration,
f.length, f.rating, f.special_features
from film f
join language l on l.language_id = f.language_id

insert into dimstore(store_id, address, address2, district, city, country, postal_code, manager_first_name,
					manager_last_name, start_date, end_date)
select i.store_id, a.address, a.address2, a.district, ct.city, co.country, a.postal_code,
s.first_name as manager_first_name, s.last_name as manager_last_name, now() as start_date, now() as end_date 
from inventory i
join rental r on r.inventory_id = i.inventory_id
join staff s on s.staff_id = r.staff_id
join address a on a.address_id = s.address_id
join city ct on ct.city_id = a.city_id
join country co on co.country_id = ct.country_id

/*
  don't have to enter the first colomn store_key as while creating the table dimstore we already put the colomn
  datatype as serial
*/

create table factsales(
	sales_key serial primary key,
	date_key integer references dimdate(date_key),
	customer_key integer references dimcustomer(customer_key),
	movie_key integer references dimmovie(movie_key),
	store_key integer references dimstore(store_key),
	sales_amount numeric
	
)

insert into factsales(date_key, customer_key, movie_key, store_key, sales_amount)
select 
	distinct(to_char(payment_date::date,'yyMMDD')::integer) as date_key,
	p.customer_id as customer_key,
	i.film_id as movie_key,
	i.store_id as store_key,
	p.amount as sales_amount
from payment p
join rental r on r.customer_id = p.customer_id
join inventory i on i.inventory_id = r.inventory_id

select * from factsales


